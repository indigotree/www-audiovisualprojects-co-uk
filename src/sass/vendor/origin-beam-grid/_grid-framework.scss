@mixin gutter($scoped-gutter: $gutter) {
    padding: {
        left: ($scoped-gutter / 2);
        right: ($scoped-gutter / 2);
    }
}

@mixin make-container($container-breaks: $container, $scoped-gutter: $gutter, $scoped-breakpoints: $breakpoints) {
    margin-right: auto;
    margin-left: auto;
    @include gutter($scoped-gutter);
    @include clearfix;
    @include make-container-breaks($container-breaks, $scoped-breakpoints);
}

@mixin make-container-breaks($widths: $container, $scoped-breakpoints: $breakpoints) {
    @each $breakpoint, $width in $widths {
        $point: map-get($scoped-breakpoints, $breakpoint);
        @media screen and (min-width: $point) {
            max-width: $width;
        }
    }
}

@mixin make-fluid-container($maximum: $fluid-container-max, $scoped-gutter: $gutter) {
    margin-right: auto;
    margin-left: auto;
    @include gutter($scoped-gutter);
    max-width: $maximum;
}

@mixin make-columns($offsets: true, $size: $grid-size, $scoped-gutter: $gutter, $scoped-breakpoints: $breakpoints) {
    & > [class*="column--"] {
        @include gutter($scoped-gutter);
    }

    @each $breakpoint in map-keys($scoped-breakpoints) {
        $point: map-get($scoped-breakpoints, $breakpoint);
        @media screen and (min-width: $point) {
            @for $i from 1 through $size {
                .column--#{$breakpoint}-#{$i} {
                    float: left;
                    width: percentage($i / $size);
                }
            }
            @if $offsets {
                @include make-offsets($breakpoint, $size);
            }
        }
    }
}

@mixin make-offsets($breakpoint, $size: $grid-size) {
    @for $i from 0 through ($size - 1) {
        @if not ($i == 0) {
            .offset--#{$breakpoint}-#{$i} {
                $num: $i / $size;
                margin-left: if($num == 0, 0, percentage($num));
            }
        }
    }
}

@mixin make-row($offsets: true, $size: $grid-size, $scoped-gutter: $gutter, $scoped-breakpoints: $breakpoints) {
    margin-left: ($scoped-gutter / -2);
    margin-right: ($scoped-gutter / -2);
    @include clearfix();
    @include make-columns($offsets, $size, $scoped-gutter, $scoped-breakpoints);
}

[class*="column--"] {
    position: relative;
    min-height: 1px;
}
